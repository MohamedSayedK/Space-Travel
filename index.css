/* ------------------- */
/* Reset               */
/* ------------------- */

/* https://piccalil.li/blog/a-modern-css-reset/ */

/* Box sizing */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reset margins */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
picture {
    margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p{
    font-weight: 400;
}

/* set up the body */
body {
    font-family: var(--ff-sans-normal);
    font-size: var(--fs-400);
    background-color: hsl(var(--clr-dark) );
    color: hsl(var(--light-color) );
    line-height: 1.5;
    min-height: 100vh;
    overflow-x: hidden;

    /* giving a display grid and the other properties is for fixing the height. now the navigation is basically the first row and is taking min height and the rest of the page is the other row and is taking up all the space now using the 1fr. (nav is a row and rest of page is another row) */
    display: grid;
    grid-template-rows: min-content 1fr;
}

/* make images easier to work with */
img,
picutre {
    max-width: 100%;
    display: block;
}

/* make form elements easier to work with */
input,
button,
textarea,
select {
    font: inherit;
}

/* remove animations for people who've turned them off */
@media (prefers-reduced-motion: reduce) {  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ------------------- */
/* Custom Properties   */
/* ------------------- */

:root{
    /*colors*/
    --clr-dark: 230 35% 7%;
    --lighter-color: 231 77% 90%;
    --light-color: 0 0% 100%;

    /* font-sizes */
    --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
    --fs-800: 3.5rem;
    --fs-700: 1.5rem;
    --fs-600: 1rem;
    --fs-500: 1rem;
    --fs-400: 0.9375rem;
    --fs-300: 1rem;
    --fs-200: 0.875rem;
    
    /* font-families */
    --ff-serif: "Bellefair", serif;
    --ff-sans-cond: "Barlow Condensed", sans-serif;
    --ff-sans-normal: "Barlow", sans-serif;
}

@media (min-width: 35em) {
    :root {
        --fs-800: 5rem;
        --fs-700: 2.5rem;
        --fs-600: 1.5rem;
        --fs-500: 1.25rem;
        --fs-400: 1rem;
    }
}

@media (min-width: 45em) {
    :root {
        /* font-sizes */
        --fs-800: 6.25rem;
        --fs-700: 3.5rem;
        --fs-600: 2rem;
        --fs-500: 1.75rem;
        --fs-400: 1.125rem;
    }
}


/* ------------------- */
/* Utility classes     */
/* ------------------- */


/* general */

.flex {
    display: flex;
    gap: var(--gap, 1rem);
}


.grid {
    display: grid;
    gap: var(--gap, 1rem);
}

.d-block {
    display: block;
}

.flow > *:where(:not(:first-child)) {
    margin-top: var(--flow-space, 1rem);
}

.container {
    padding-inline: 2em;
    margin-inline: auto;
    max-width: 80rem;
}



.sr-only {                                      /* This is for screen readers */
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.skip-to-content {
    position: absolute;
    background: hsl( var(--light-color) / 1);
    color: hsl( var(--clr-dark) / 1);
    padding: .5em 1em;
    margin: 0 auto;
    transform: translateY(-100%);
    transition: 500ms ease-in;
}

.skip-to-content:focus{
    transform: translateY(0);

}



.flow > *:where(:not(:first-child)) {
    margin-top: var(--flow-space, 1rem);
}

.flow--space-small{
    --flow-space:0.75rem;
}



/*colors*/

.bg-dark{
    background-color: hsl(var(--clr-dark) );
}

.bg-lighter{
    background-color: hsl(var(--lighter-color) );
}

.bg-light{
    background-color: hsl(var(--light-color) );
}

.txt-dark{
    color: hsl(var(--clr-dark) );
}

.txt-lighter{
    color: hsl(var(--lighter-color) );
}

.txt-light{
    color: hsl(var(--light-color) );
}

.example-component{
    background-color: hsl(var(--lighter-color) / 0.2 );
}


/*Typography*/

.ff-serif{ font-family: var(--ff-serif);}
.ff-sans-cond{ font-family: var(--ff-sans-cond);}
.ff-sans-normal{ font-family: var(--ff-sans-normal);}

.letter-spacing-1 { letter-spacing: 4.75px; } 
.letter-spacing-2 { letter-spacing: 2.7px; } 
.letter-spacing-3 { letter-spacing: 2.35px; } 

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }


.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}


.numbered-title{
    text-transform: uppercase;
    font-family: var(--ff-sans-cond);
    font-size: var(--fs-500);
    letter-spacing: 4.72px;
}

.numbered-title span {
    color: hsl(var(--light-color) / .25 );
    margin-right: .5em;
    font-weight: 700;
}

/* ------------------- */
/* Components          */
/* ------------------- */

.large-button {
    font-size: 2rem;
    position: relative;
    z-index: 1;
    display: inline-grid;
    place-items: center;
    padding: 0 2em;
    border-radius: 50%;
    aspect-ratio: 1;
    text-decoration: none;
}

.large-button::after {
    content: '';
    position: absolute;
    z-index: -1;
    width: 100%;
    height: 100%;
    background: hsl( var(--light-color) / .1);
    border-radius: 50%;
    opacity: 0;
    transition: opacity 500ms linear, transform 750ms ease-in-out;
}
 
.large-button:hover::after,
.large-button:focus::after {
    opacity: 1;
    transform: scale(1.5);
}

/* the scale property scales the "after" to be bigger than the original button, set the "after" to be absolute and original to be absolute */ 

.primary-navigation {
    --gap: clamp(2rem, 5vw + 1rem, 3rem);
    --underline-gap:2rem;
    list-style: none;
    padding: 0;
    margin: 0;
    background: hsl(var(--clr-dark) / 0.95 );

}

/* Supports means that in case your browser supports the selected property backdrop filter in this example then it will go with that. if not it will use the fallback styling */

@supports(backdrop-filter: blur(25px)){
    .primary-navigation{
        background: hsl( var(--light-color) / .1);
        background-clip: padding-box;
        backdrop-filter: blur(25px);
    }
}

.mobile-nav-toggle {
    display: none;
}

/*Head Navigation*/

    .logo{
        margin: 1.5rem clamp(1.5rem , 5vw + 1rem, 3.5rem);
    }

    .primary-header{
        justify-content: space-between;
        align-items: center;
    }

    .primary-navigation a {
        text-decoration: none;
    }
    
    .primary-navigation a > span{
        font-weight: 700;
        margin-right: .5em;
    }

@media  (max-width: 35rem){
    .primary-navigation {
        flex-direction: column;
        position: fixed;
        inset: 0 0 0 30%;
        z-index: 1000;
        --underline-gap:0.5rem;
        list-style: none;
        padding: min(20rem , 15vh) 2rem;
        margin: 0;
        /* using the transform 100% means that i made it move itself 100% away left of the screen we will need this to make it slide in and out when clicked on the hamburger button */
        transform: translateX(100%);
        transition: transform 750ms ease-in-out;
        /* justify-content: center; */
    }



    .primary-navigation[data-visible="true"]{
        transform: translateX(0);
    }


    .primary-navigation.underline-indicators .active{
        border: 0;

    }

    .mobile-nav-toggle {
        display: block;
        position: absolute;
        z-index: 2000;
        top: 1rem;
        right: 2rem;
        background-color: transparent;
        border: none;
        background-image: url(./assets/shared/icon-hamburger.svg);
        background-position: center center;
        background-repeat: no-repeat;
        width: 2rem;
        aspect-ratio: 1;
    }
    }

    .mobile-nav-toggle[aria-expanded="true"]{
        background-image: url(./assets/shared/icon-close.svg) ;
    }

    @media (min-width:35em){
        .primary-navigation {
            padding-inline: clamp(1.9rem , 5vw , 7rem) ;
        }
    }

    @media (min-width: 35em) and (max-width: 44.999em) {
        .primary-header span {
            display: none;
        }
        .primary-navigation{
            background: hsl( var(--light-color) / .03);
        }
    }

    @media (min-width:45em){

        .primary-header::after{
            content: '';
            display: block;
            position: relative;
            height: 1px;
            width: 100% ;
            background: hsl(var(--light-color) / .50 );
            order: 1;
            z-index: 10;
            margin-right: -2.5rem;
        }

        nav{
            order: 2;
        }

        .primary-navigation{
            margin-block: 2rem;
        }
    }



.underline-indicators > * {
    cursor: pointer;
    padding: var(--underline-gap, 0.5rem) 0;
    border: 0;
    border-bottom: .2rem solid hsl( var(--light-color) / 0 );
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
    border-color: hsl( var(--light-color) / .5);
}

.underline-indicators > .active,
.underline-indicators > [aria-selected="true"] {
    border-color: hsl( var(--light-color) / 1);
}

.tab-list {
    --gap: 2rem;
}

.tab-list button{
    background: transparent;
}

.dot-indicators > *{
    cursor: pointer;
    border:0;
    border-radius: 50%;
    aspect-ratio: 1;
    padding: .5em;
    background: hsl(var(--light-color) / .15 );
}

.dot-indicators > button:hover,
.dot-indicators > button:focus {
    background: hsl( var(--light-color) / .5);
}

.dot-indicators > .active,
.dot-indicators > [aria-selected="true"] {
    background: hsl( var(--light-color) / 1);
}

.circle-indicators{
    flex-direction: row;
}



.circle-indicators > *{
border-radius: 50%;
border: solid hsl(var(--light-color) / .25 );
cursor: pointer;
height: 5em;
width: 5em;
}

.circle-indicators > button:hover,
.circle-indicators > button:focus {
    border-color: hsl( var(--light-color) / .5);
}

.circle-indicators > .active,
.circle-indicators > [aria-selected="true"] {
    border-color: hsl( var(--light-color) / 1);
    background: hsl( var(--light-color) / 1);
    color: hsl(var(--clr-dark) );
}


/* ----------------------------- */
/* Page specific background      */
/* ----------------------------- */

body{
    background-size: cover;
    background-position: bottom center;
}

/* home */
.home {
    background-image: url(./assets/home/background-home-mobile.jpg);
}

@media (min-width: 35rem) {
    .home {
        background-position: center center;
        background-image: url(./assets/home/background-home-tablet.jpg);
    }
}

@media (min-width: 45rem) {
    .home {
        background-image: url(./assets/home/background-home-desktop.jpg);
    }
} 

/* destination */
.destination {
    background-image: url(./assets/destination/background-destination-mobile.jpg);
}

@media (min-width: 35rem) {
    .destination {
        background-position: center center;
        background-image: url(./assets/destination/background-destination-tablet.jpg);
    }
}

@media (min-width: 45rem) {
    .destination {
        background-image: url(./assets/destination/background-destination-desktop.jpg);
    }
} 

/* crew */
.crew {
    background-image: url(./assets/crew/background-crew-mobile.jpg)
}

@media (min-width: 35rem) {
    .crew {
        background-position: center center;
        background-image: url(./assets/crew/background-crew-tablet.jpg);
    }
}

@media (min-width: 45rem) {
    .crew {
        background-image: url(./assets/crew/background-crew-desktop.jpg);
    }
}

/* technology */
.technology {
    background-image: url(./assets/technology/background-technology-mobile.jpg)
}

@media (min-width: 35rem) {
    .technology {
        background-position: center center;
        background-image: url(./assets/technology/background-technology-tablet.jpg);
    }
}

@media (min-width: 45rem) {
    .technology {
        background-image: url(./assets/technology/background-technology-desktop.jpg);
    }
}



/* ----------------------------- */
/* Layout                        */
/* ----------------------------- */

.grid-container {
    text-align: center;
    display: grid;
    place-items: center;
    padding-inline: 2rem;
    padding-bottom: 4rem;
}

.grid-container p:not([class]) {
    max-width: 55ch;
}

.numbered-title{
    grid-area: title;
}

/* destination layout */

.grid-container {
    text-align: center;
    display: grid;
    place-items: center;
    padding-inline: 1rem;
    padding-bottom: 4rem;
}

.grid-container p:not([class]) {
    max-width: 50ch;
}

.numbered-title {
    grid-area: title;
}

/* destination layout */

.grid-container--destination {
    --flow-space: 2rem;
    grid-template-areas: 
        'title'
        'image'
        'tabs'
        'content';
}

.grid-container--destination > picture {
    grid-area: image;
    max-width: 60%;
    align-self: start;
}

.grid-container--destination > .tab-list {
    grid-area: tabs;
}

.grid-container--destination > .destination-info {
    grid-area: content;
}

.destination-meta {
    flex-direction: column;
    border-top: 1px solid hsl( var(--clr-white) / .1);
    padding-top: 2.5rem;
    margin-top: 2.5rem;
}

.destination-meta p {
    font-size: 1.75rem;
}

@media (min-width: 35em) {
    .destination-meta{
        flex-direction: row;
        justify-content: space-around;
    }

    .numbered-title{
        justify-self: start;
        margin-top: 2rem;
    }

}


/* if the width is 45em or bigger : */
@media (min-width: 45em) {
    .grid-container {
        text-align: left;
        column-gap: var(--container-gap, 2rem);
        grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 30rem)) minmax(2rem, 1fr);
    }
    
    .grid-container--home > *:first-child {
        grid-column: 2;

    }

    .grid-container--home > *:last-child {
        grid-column: 3;

    }

    /* giving grid column 2 and 3 to our components we are specifically specifying that i want my space paragraph to be the second column and first child and my button to be the third column and last child */

    .grid-container--home{
        /* we will use the max function here so in case someone is using a very large monitor the items will not appear like they stick to the bery bottom of the page but the padding will scale according to the page */
     padding-bottom: max(6rem, 20vh);
    align-items: end;
    }

    .grid-container--destination{
        justify-items: start;
        /* the dot (.) represents the empty space we want to give in out grid the empty gap class we stated earlier after that we do title title because we want out title to span the enter screen after that on our next row we want the image to be next to the tabs and lastly the image will be next to out content */
        grid-template-areas: 
        '. title title .'
        '. image tabs .'
        '. image content .';
    }

    .grid-container--destination > img{
        max-width: 80%;
    }

    .destination-meta{
        /* using the min function here will mean that choose whichever is smaller so for large screens it iwll go with the 6 rem otherwise it will choose the 6vw */
        --gap: min(6vw, 6rem);
        justify-content: start;
    }
}

/* crew layout */

.grid-container--crew{
    --flow-space:2rem;
    grid-template-areas: 
        'title'
        'image'
        'dots'
        'content';
}


.grid-container--crew > picture{
    grid-area: image;
    max-width: 70%;
    border-bottom: 1px solid hsl(var(--light-color) / .1 ); 
}

.grid-container--crew > .dot-indicators{
    grid-area: dots;
}

.grid-container--crew > .crew-details{
    grid-area: content;
}

@media (min-width: 35em) {
    .grid-container--crew{
        padding-bottom: 0;
        --flow-space:2rem;
        grid-template-areas: 
            'title'
            'content'
            'dots'
            'image';
    }

}

/* if the width is 45em or bigger : */
@media (min-width: 45em) {
    
    .grid-container {
        text-align: left;
        column-gap: var(--container-gap, 2rem);
        grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 30rem)) minmax(2rem, 1fr);
    }
    .grid-container--crew{
        justify-items: start;
        grid-template-columns: minmax(1rem, 1fr) minmax(0, 37rem) minmax(0, 23rem) minmax(1rem, 1fr);
        /* the dot (.) represents the empty space we want to give in out grid the empty gap class we stated earlier after that we do title title because we want out title to span the enter screen after that on our next row we want the image to be next to the tabs and lastly the image will be next to out content */
        grid-template-areas: 
        '. title image .'
        '. content image .'
        '. dots image .';
    }

    .grid-container--destination > img{
        max-width: 80%;
    }

    .grid-container--destination > picture {
        grid-column: span 2;
        align-self: end;
        max-width: 90%;
    }
    

}
.crew-details h2{
    color: hsl(var(--light-color) / .50 );
}


/* technology layout */

.grid-container--technology {
    --flow-space:2rem;
    grid-template-areas: 
        'title'
        'image'
        'circles'
        'content';
}

.grid-container--technology > .circle-indicators{
    grid-area: circles;
}

.grid-container--technology > .technology-details{
    grid-area: content;
}

.grid-container--technology > picture{
    grid-area: image;
    max-width: 80%;
    align-self: start;
}

@media (min-width: 35em) {
    .grid-container--technology > picture{
        max-width: 65%;
    }

}


/* if the width is 45em or bigger : */
@media (min-width: 45em) {
    
    .grid-container--technology{
        justify-items: start;
        grid-template-columns: minmax(1rem, 1fr)  minmax(0, 30rem) minmax(0,30rem) minmax(1rem, 1fr);
        /* the dot (.) represents the empty space we want to give in out grid the empty gap class we stated earlier after that we do title title because we want out title to span the enter screen after that on our next row we want the image to be next to the tabs and lastly the image will be next to out content */
        grid-template-areas: 
        '. title title .'
        '. circles image .'
        '. content image .';
    }

    .grid-container--technology > picture {
        align-self:end;
        max-width: 40%;
        position: absolute;
        right: 0;
        top: 25%;
    }

    .technology-details h2 {
        color: hsl(var(--light-color) / .50 );
    }
}



